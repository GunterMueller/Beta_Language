Beta execution aborted: Stop is called.

Call chain: (linux)

  item <BETAENVSTOP-~> in ~beta/basiclib/v1.5/private/betaenvbody
    -- stop# in ~beta/basiclib/v1.5/betaenv
  item <stop#> in ~beta/basiclib/v1.5/betaenv
    -- BETAENV-~ in ~beta/basiclib/v1.5/betaenv
  item resolve#<resolve#>resolve# in /work1/home/kai/beta/src/ad/nameaplbody
    -- Remote#NameApl#NameRef#ForwardDenotation#AttributeDenotation#ObjectSpecification#BETAterm# in /work1/home/kai/beta/src/ad/nameapl
  item resolve#<resolve#> in /work1/home/kai/beta/src/attributebody
    -- SimpleDecl#Attribute#BETAlist#BETAterm# in /work1/home/kai/beta/src/attribute
  item <*>findName#hashOd#integerValue# in /work1/home/kai/beta/src/ad/nameaplbody
    -- BETAENV-~ in ~beta/basiclib/v1.5/betaenv
  item *<scanIndexed#> in ~beta/containers/v1.5/private/hashTableBody
    -- COMPILERNAMETABLE-~hashTable#collection#container# in /work1/home/kai/beta/src/nametable
  item *<findName#>hashOd#integerValue# in /work1/home/kai/beta/src/nametable
    -- COMPILERNAMETABLE-~hashTable#collection#container# in /work1/home/kai/beta/src/nametable
  item <resolve#>resolve# in /work1/home/kai/beta/src/ad/nameaplbody
    -- NameApl#NameRef#ForwardDenotation#AttributeDenotation#ObjectSpecification#BETAterm# in /work1/home/kai/beta/src/ad/nameapl
  item resolve#resolve#<resolve#> in /work1/home/kai/beta/src/attdenbody
    -- Remote#NameApl#NameRef#ForwardDenotation#AttributeDenotation#ObjectSpecification#BETAterm# in /work1/home/kai/beta/src/ad/nameapl
  item resolve#<resolve#> in /work1/home/kai/beta/src/attributebody
    -- SimpleDecl#Attribute#BETAlist#BETAterm# in /work1/home/kai/beta/src/attribute
  item <checkFollow#>iterate# in /work1/home/kai/beta/src/virt/declbody
    -- ATTRIBUTEPTREXT-~AttributePtr#BETAlistPtr# in /work1/home/kai/beta/src/attributebitch
  item <checkFollow#>booleanObject#booleanValue# in /work1/home/kai/beta/src/objectdescbody
    -- OBJECTDESCRIPTORPRIVATE-~ in /work1/home/kai/beta/src/objectdesc
  item <checkFollow#>checkFollow#booleanValue# in /work1/home/kai/beta/src/objectdescbody
    -- ObjectDescriptor#ObjectSpecification#BETAterm# in /work1/home/kai/beta/src/compiler
  item <*>fragiterate# in /work1/home/kai/beta/src/bfile
    -- checkFollow#checkFollow#booleanValue# in /work1/home/kai/beta/src/bfile
  item <checkFollow#>checkFollow#booleanValue# in /work1/home/kai/beta/src/bfile
    -- ObjectDescriptorFragment#Fragment#BETAlist#BETAterm# in /work1/home/kai/beta/src/fragment
  item <checkFollow#>iterate# in /work1/home/kai/beta/src/bfile
    -- COMPILERFRAGMENTPTR-~BETAlistPtr# in /work1/home/kai/beta/src/bfile
  item <BETAFILECHECK-~> in /work1/home/kai/beta/src/bfilebody
    -- BETAfile# in /work1/home/kai/beta/src/compiler
  item <BETAFILEOPEN-~> in /work1/home/kai/beta/src/compile
    -- BETAfile# in /work1/home/kai/beta/src/compiler
  item <compilefile#> in /work1/home/kai/beta/src/compile
    -- Compiler# in /work1/home/kai/beta/src/compiler
  comp <PROGRAM-~> in /work1/home/kai/beta/src/b2c
    -- BETAENV-~ in ~beta/basiclib/v1.5/betaenv


  basic component in ~beta/basiclib/v1.5/betaenv


Legend:

The above dump shows the dynamic call stack of invoked objects.
The dump starts at the object that was the current object when
the error occurred and continues down towards the basic component.
The descriptions have the following meaning:
1. Items are shown in two lines, like this:
      item <name#>pname1#pname2#pname3 in ifile
        -- sname#spname1#spname2 in sfile
   meaning that the item is an instance of the descriptor "name" which has
   prefix "pname1" which has prefix "pname2", etc. This item is defined in the
   file "ifile". The part of the prefix chain enclosed in "<" and ">" indicates
   where in the action sequence the error occurred. The line beginning with
   "--" shows the textually surrounding descriptor using the same notation.
2. The descriptor names used in the above description will normally have one or
   more "meta characters" appended. The meaning of these is:
      #  The descriptor belongs to a pattern, e.g. P: (# ... #)
      ~  Singular named descriptor, e.g. X: @(# ... #)
      *  Singular unnamed descriptor, e.g. ... ; (# ... #) ; ...
      -  Descriptor SLOT.
3. Components are shown using a notation similar to that of items, like this:
      comp <name#>pname1#pname2#pname3 in cfile
4. The bottommost component corresponding to the basic environment is shown
   like an ordinary component, but indicated with "basic component".
5. In case the error occurred in some external code called from BETA, the top
   of the call stack is shown like
      [ EXTERNAL ACTIVATION PART ]
6. In case the BETA code has called some external code which has in turn called
   back into the BETA code, and the callback is still active at the point of
   the error, the intermediate call stack part is also shown like
      [ EXTERNAL ACTIVATION PART ]
