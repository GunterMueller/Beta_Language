-- betaenv:descriptor --
(# (* using dynamic specialization to put "breakpoints" on 
    * selected objects; note the warnings given at dynamic
    * specialization operations - they are given because
    * we know too little about proc_ref to be able to prove
    * at compile-time that the specialization will succeed *)
   
   puttext: (# t: [0]@char enter t do (for i:t.range repeat t[i]->stdio for)#);
   newline: (# do '\n'->stdio #);

   (* define an example procedure to put breakpoints into;
    * note that there are no "hooks" (virtual/INNER) *)
   proc: (# do 'This is proc running'->puttext #); 

   (* we need to manipulate an invocation of 'proc' 
    * so here is a reference used to get hold of it *)
   proc_ref: ^proc;
do
   (* create an invocation of 'proc' without executing it *)
   &proc_ref[];

   (* execute it *)
   proc_ref; newline;
   
   (* insert a breakpoint and execute: prepends a '['; NB: warning *)
   (# do 'Sneak in before: '->puttext; INNER #) & proc ## -> proc_ref##;
   proc_ref; newline;

   (* insert another breakpoint: appends a ']'; NB: warning *)
   (# do INNER; ' .. or after!'->puttext #) & proc ## -> proc_ref##;
   proc_ref; newline;

   (* the original pattern is unchanged *)
   proc; newline;
#)

