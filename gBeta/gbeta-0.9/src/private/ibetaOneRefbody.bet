(* FILE "./private/ibetaOneRefbody.bet"
 *
 * Copyright (C) 1997-2001 Erik Ernst
 *
 * This file is part of "gbeta" -- a generalized version of the
 * programming language BETA.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is destributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Among other things, the copyright notice and this notice must be
 * preserved on all copies.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, probably in a file named COPYING; if not,
 * write to the Free Software Foundation, Inc., 675 Mass Ave,
 * Cambridge, MA 02139, USA.
 *
 * To contact the author by email: eernst@cs.auc.dk
 *
 * To contact the author by snail-mail:
 *    Erik Ernst
 *    Department of Computer Science
 *    University of Aalborg
 *    DK-9220 Aalborg OE
 *    Denmark
 *
 * $Id: ibetaOneRefbody.bet,v 1.21 2001/07/01 21:44:11 eernst Exp $
 *)

ORIGIN 'ibetaOnebody'

(************************************************************* 
 *                                                           * 
 *                     l1ObjectRefEntity                     * 
 *                                                           * 
 *************************************************************)

-- ObjectRefEntityPrint:dopart --
do
   (if value[]=NONE then
       ' = NONE'->output
    else
       ' --> '->output;
       (dest[],indentation,false,NONE)->value.print
   if)

-- ObjectRefEntityPrintShort:dopart --
do
   (if value[]=NONE then
       '=NONE'->output
    else
       '-->'->output;
       (dest[],indentation,false)->value.printShort
   if)

-- ObjectRefEntityExecute:dopart --
do
   (if value[]<>NONE then 
       (thrd[],unwind##)->value.execute
    else
       ('Trying to execute via a NONE-valued object reference'
       ,thrd[],unwind##)->refNoneError
   if)

-- ObjectRefEntityGetEnterIter:dopart --
do
   (if value[]<>NONE then 
       (thrd[],unwind##,stsub[],world[],usageAst[],execute)
         ->value.getEnterIter
         ->ni[]
    else
       ('Trying to assign via a NONE-valued object reference'
       ,thrd[],unwind##)->refNoneError
   if)

-- ObjectRefEntityGetExitIter:dopart --
do
   (if value[]<>NONE then 
       (thrd[],unwind##,stsub[],world[],usageAst[])
         ->value.getExitIter
         ->xi[]
    else
       ('Trying to evaluate via a NONE-valued object reference'
       ,thrd[],unwind##)->refNoneError
   if)

-- ObjectRefEntityGetEnterExitIter:dopart --
do
   (if value[]<>NONE then 
       (thrd[],unwind##,stsub[],world[],usageAst[])
         ->value.getEnterExitIter
         ->(ni[],xi[]);
       this(l1ObjectRefEntity)[]->ni.usageEntity[]->xi.usageEntity[]
    else
       ('Trying to evaluate via a NONE-valued object reference'
       ,thrd[],unwind##)->refNoneError
   if)

(* 
 * local variables:
 * ee-beta-main-file: "~/gbeta-0.9/src/main/gbeta.bet"
 * end:
 *)
