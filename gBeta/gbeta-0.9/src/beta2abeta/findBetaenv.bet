(* FILE "./beta2abeta/findBetaenv.bet"
 *
 * Copyright (C) 1997-2001 Erik Ernst
 *
 * This file is part of "gbeta" -- a generalized version of the
 * programming language BETA.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is destributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Among other things, the copyright notice and this notice must be
 * preserved on all copies.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, probably in a file named COPYING; if not,
 * write to the Free Software Foundation, Inc., 675 Mass Ave,
 * Cambridge, MA 02139, USA.
 *
 * To contact the author by email: eernst@cs.auc.dk
 *
 * To contact the author by snail-mail:
 *    Erik Ernst
 *    Department of Computer Science
 *    University of Aalborg
 *    DK-9220 Aalborg OE
 *    Denmark
 *
 * $Id: findBetaenv.bet,v 1.12 2001/07/01 21:44:10 eernst Exp $
 *)

ORIGIN  'betaast';
INCLUDE 'fragmentGraph';
INCLUDE '../basicinterp'

-- betaAstInterfaceLib:attributes --

findBetaEnv:
  (# isBetaenvName: booleanValue
       (# name: ^text 
       enter name[] 
       do 'betaenv'->name.equalNCS->value
       #);
     graph: ^fragmentGraph;
     ib: ^interpreterbase;
     firstSearch: @boolean;
     n: ^fragmentGraph.node;
     ff: ^fragmentForm
  enter (graph[],ib[])
  do true->firstSearch;
     graph.nodes.scan
     (# 
     do (if current.origin.empty then 
            (if firstSearch then 
                (* found "top" node *)
                current[]->n[];
                false->firstSearch
                (* continue by checking ambiguity *)
             else
                (* at least two "top" nodes exist *)
                (# msg: ^text
                do 'More than one fragment group without ORIGIN:\n\t'
                     ->msg[];
                   n.group.fullname->msg.putline;
                   '\t'->msg.puttext;
                   current.group.fullname->msg.putline;
                   msg[]->ib.fragmentError
                #)
            if)
         (* else: this node has an origin, skip *)
        if)
     #);
     (if firstSearch then 
         (* search failed already first time *)
         'Could not find a fragment group without ORIGIN'
           ->ib.fragmentError
      (* else: search succeeded first time and then failed: OK *)
     if);

     (* 'n' has no origin; now find exactly one descriptor *)
     true->firstSearch;
     n.group.splitscan
     (# onForm::
          (# 
          do (* !!!!! FIXME: Here we test for theGrammar; we should 
              * really test for theGrammar and for theGGrammar, depending 
              * on which grammar is being used; it still works because 
              * DescriptorForm is 2 in both grammars and ObjectDescriptor
              * is 4 *)
             (if current.root.symbol
              // theGrammar.ObjectDescriptor
              // theGrammar.DescriptorForm then 
                 (if firstSearch then 
                     (if current.name->isBetaenvName then
                         current[]->ff[];
                         false->firstSearch
                      (* else: ignore descriptors with other names *)
                     if)
                  else
                     'More than one "betaenv" in the ORIGIN-less group'
                       ->ib.fragmentError
                 if)
             if)
          #)
     #);
     (if firstSearch then 
         (* no descriptors at all *)
         'No descriptors named "betaenv" in the ORIGIN-less group'
           ->ib.fragmentError
      (* else: OK, first search succeeded, second try failed *)
     if)
  exit (n[],ff.root[])
  #)

(* 
 * local variables:
 * ee-beta-main-file: "~/gbeta-0.9/src/main/gbeta.bet"
 * end:
 *)
